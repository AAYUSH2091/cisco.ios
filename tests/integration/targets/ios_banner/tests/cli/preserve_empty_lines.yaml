
  - name: Define the ASCII art banner with leading/trailing newlines
    ansible.builtin.set_fact:
      # Using a double-quoted string with \n is the most robust way to handle
      # special characters like '|' that can confuse the YAML parser in block scalars.
      ascii_banner_with_newlines: "\n  _   _   _                                      _   _   _  \n | |_| |_| |          Network Test              | |_| |_| |\n"

  #
  # --- SCENARIO 1: Test default behavior (preserve_empty_lines: false) ---
  #
  - name: Setup - Set login banner with empty lines stripped
    cisco.ios.ios_banner:
      banner: login
      text: "{{ ascii_banner_with_newlines | trim }}" # Use trim filter to set the baseline
      state: present

  - name: Test - Default behavior strips empty lines and is idempotent
    cisco.ios.ios_banner:
      banner: login
      text: "{{ ascii_banner_with_newlines }}" # Provide full text, but without the new flag
      # preserve_empty_lines: false is the default
      state: present
    register: result_default_behavior

  - name: Assert - Default behavior did not change anything
    ansible.builtin.assert:
      that:
        - not result_default_behavior.changed
        - result_default_behavior.commands | length == 0
      fail_msg: "FAILED: Default behavior should have been idempotent but it reported a change."

  #
  # --- SCENARIO 2: Test new feature (preserve_empty_lines: true) ---
  #
  - name: Test - Set banner with preserved empty lines
    cisco.ios.ios_banner:
      banner: login
      text: "{{ ascii_banner_with_newlines }}"
      preserve_empty_lines: true
      state: present
    register: result_set_preserved

  - name: Assert - Setting the preserved banner reported a change
    ansible.builtin.assert:
      that:
        - result_set_preserved.changed
        - result_set_preserved.commands | length > 0
      fail_msg: "FAILED: Setting the preserved banner should have reported a change."

  #
  # --- SCENARIO 3: Test idempotency of the new feature ---
  #
  - name: Test - Verify idempotency with preserved empty lines
    cisco.ios.ios_banner:
      banner: login
      text: "{{ ascii_banner_with_newlines }}"
      preserve_empty_lines: true
      state: present
    register: result_idempotency_preserved

  - name: Assert - Idempotency check with preserved banner was successful
    ansible.builtin.assert:
      that:
        - not result_idempotency_preserved.changed
        - result_idempotency_preserved.commands | length == 0
      fail_msg: "FAILED: The module was not idempotent when the preserved banner was already set."

  #
  # --- SCENARIO 4: Test cleanup (state: absent) ---
  #
  - name: Cleanup - Remove the login banner
    cisco.ios.ios_banner:
      banner: login
      state: absent
    register: result_cleanup

  - name: Assert - Cleanup was successful
    ansible.builtin.assert:
      that:
        - result_cleanup.changed
      fail_msg: "FAILED: Removing the banner should have reported a change."